{
  "projectList": [
    {
      "name": "All Camping 올캠핑 Client (2022.08.13 ~ 2022.12.02)",
      "link": "https://github.com/goldmayo/allcamp-graphql-client",
      "description": "아토믹 디자인 시스템을 적용한 전국 캠핑장 정보 조회 개인 프로젝트",
      "responsibilities": [
        "디자인 시스템 적용한 TailwindCSS로 반응형 레이아웃 구현",
        "atomic 디자인을 적용한 컴포넌트 설계",
        "GraphQL Query설계",
        "Next.js v13 마이그레이션"
      ],
      "technologies": "NextJS, React, TypeScript, Zustand, Storybook, GraphQL, TailwindCss, Figma, context API",
      "troubleShooting": {
        "workLinks": [
          {
            "name": "All Camping 올캠핑 Client Card 컴포넌트 개선 기록",
            "notionLink": "https://harmless-hibiscus-5de.notion.site/All-Camping-Client-Card-6ca2f322d0f74d47886c3a600849a8f6?pvs=4"
          }
        ],
        "workList": [
          "파편화된 컴포넌트를 compound와 composition을 사용해 재사용 가능한 하나의 컴포넌트로 통합하여 리팩토링했습니다.",
          "compound component, component composition 패턴을 적용하여 props drilling현상을 해결했습니다.",
          "Zustand 전역 스토어에 slice 패턴과 ducks 패턴을 적용하여 상세 검색기능 구현하였습니다."
        ]
      },
      "whatILearned": [
        "Zustand를 사용하여 전역 스토어에 slice 패턴과 ducks 패턴을 적용해 결합도를 낮추고 응집도를 높힌 전역 스토어 관리를 경험했습니다.",
        "디자인 시스템, atomic 디자인, storybook을 사용해 프로젝트에 일관성을 지키며 UI 수정 및 확장을 빠르게 반영한 경험을 했습니다."
      ]
    },
    {
      "name": "All Camping 올캠핑 Server (2022.07.06 ~ 2022.11.22)",
      "repositoryLink": "https://github.com/goldmayo/allcamp-graphql-service",
      "description": "한국관광공사 고캠핑 api활용 전국의 캠핑장 정보 제공 개인 프로젝트",
      "responsibilities": [
        "스케줄러를 사용한 API 호출 및 Bulk Insert",
        "GraphQL Resolver 구현 및 Query설계",
        "Querydsl을 사용한 동적 검색기능 구현",
        "Relay-cursor-base 페이지네이션 구현"
      ],
      "technologies": "SpringBoot, Java, JPA, Querydsl GraphQL, MariaDB",
      "troubleShooting": {
        "workLinks": [
          {
            "name": "",
            "notionLink": ""
          }
        ],
        "workList": ["수신한 데이터의 변경사항과 중복을 검사하는 로직 6초에서 2초로 개선했습니다."]
      },
      "whatILearned": [
        "쿼츠 스케줄러를 통한 API 호출부터 수신한 데이터의 최신성 유지를 위한 가공 후 저장하는 경험을 했습니다.",
        "Querydsl과 JPA를 적용해 동적 검색 구현을 경험했습니다."
      ]
    },
    {
      "name": "IGOBADA 이고바다 (2022.02.14 ~ 2023.01.19)",
      "repositoryLink": "https://github.com/goldmayo/IGOBADA",
      "description": "웹 명함관리 개인 프로젝트",
      "responsibilities": [
        "리팩토링과 최적화를 통해 light house 점수 개선",
        "Firebase를 통한 Google, Github 소셜 로그인 및 회원가입",
        "명함 CRUD 정렬 및 인덱싱"
      ],
      "technologies": "React, Firebase, Typescript, Redux-toolkit",
      "troubleShooting": {
        "workLinks": [
          {
            "name": "",
            "notionLink": ""
          }
        ],
        "workList": [
          "light house의 종합점수를 87에서 92로 개선했습니다.\\nReact.lazy()를 사용한 동적 import을 적용하여 랜딩 페이지의 LCS를 2.4초에서 1.7초로 개선했습니다.\\n모든 서비스 클래스(Auth, Repository, Assetuploader)를 root에서 생성후 props로 넘기는 방식에서 싱글톤 패턴을 적용한 서비스 클래스를 동적 import된 각 페이지에서 호출하는 방식으로 리팩토링했습니다.\\nFCP와 TTI사이의 시간인 total blocking time을 70ms에서 20ms로 개선했습니다.",
          "redux-toolkit 전역 스토어에 slice 패턴을 적용하여 User 컴포넌트의 props drilling을 해소했습니다."
        ]
      },
      "whatILearned": [
        "redux-toolkit을 사용하여 slice 패턴과 ducks패턴을 적용할 수 있었습니다.",
        "light house의 평가 지표인 주요 콘텐츠 로드 시간을 렌더링 성능 최적화 방법을 적용하여 개선할 수 있었습니다."
      ]
    }
  ]
}
